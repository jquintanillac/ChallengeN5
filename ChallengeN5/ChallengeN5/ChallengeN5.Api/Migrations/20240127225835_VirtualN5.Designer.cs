// <auto-generated />
using System;
using ChallengeN5.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChallengeN5.Api.Migrations
{
    [DbContext(typeof(Datacontext))]
    [Migration("20240127225835_VirtualN5")]
    partial class VirtualN5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChallengeN5.Api.Data.Entity.Empleados", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoID"));

                    b.Property<DateTime?>("Audit_fec_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Audit_fec_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Audit_user_creacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Audit_user_modificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmepleadoDocidentidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpleadoApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpleadoDepartamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EmpleadoFechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpleadoNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpleadoPuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("EmepleadoDocidentidad")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ChallengeN5.Api.Data.Entity.Permisos", b =>
                {
                    b.Property<int>("PermisoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoID"));

                    b.Property<DateTime?>("Audit_fec_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Audit_fec_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Audit_user_creacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Audit_user_modificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<string>("PermisoActivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermisoDescripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PermisoFechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PermisoFechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoPermisoID")
                        .HasColumnType("int");

                    b.HasKey("PermisoID");

                    b.HasIndex("EmpleadoID");

                    b.HasIndex("TipoPermisoID");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("ChallengeN5.Api.Data.Entity.TiposPermisos", b =>
                {
                    b.Property<int>("TipoPermisoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoPermisoID"));

                    b.Property<DateTime?>("Audit_fec_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Audit_fec_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Audit_user_creacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Audit_user_modificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPermisoDescripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoPermisoObservacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoPermisoID");

                    b.HasIndex("TipoPermisoDescripcion")
                        .IsUnique();

                    b.ToTable("TipoPermisos");
                });

            modelBuilder.Entity("ChallengeN5.Api.Data.Entity.Permisos", b =>
                {
                    b.HasOne("ChallengeN5.Api.Data.Entity.Empleados", "Empleado")
                        .WithMany("Permisos")
                        .HasForeignKey("EmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeN5.Api.Data.Entity.TiposPermisos", "TipoPermiso")
                        .WithMany("Permisos")
                        .HasForeignKey("TipoPermisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("TipoPermiso");
                });

            modelBuilder.Entity("ChallengeN5.Api.Data.Entity.Empleados", b =>
                {
                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("ChallengeN5.Api.Data.Entity.TiposPermisos", b =>
                {
                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
